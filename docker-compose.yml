version: '3.8'

services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    depends_on:
      - discovery-server

    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota

  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota

  report-service:
    build:
      context: ./report-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota
    volumes:
      - ./reports:/app/reports

  sale-service:
    build:
      context: ./sale-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota

  user-management-service:
    build:
      context: ./user-management-service
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - toyota

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak_db
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=9414
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_IMPORT=/opt/keycloak/data/import/32bit_realm-realm.json
      - KC_HOSTNAME=keycloak
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak-import:/opt/keycloak/data/import
    networks:
      - toyota
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev --import-realm

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=9414
      - POSTGRES_DB=storage
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - toyota
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  keycloak_data:

networks:
  toyota:

